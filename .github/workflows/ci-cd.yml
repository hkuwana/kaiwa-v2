name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '20'

jobs:
  # Smoke Tests - Run on every push/PR
  smoke-tests:
    name: Smoke Tests
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run smoke tests
        run: pnpm run smoke:test
        env:
          CI: true
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: smoke-test-results
          path: test-results/
          retention-days: 7

  # Build Verification - Run on every push/PR
  build-verification:
    name: Build Verification
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # - name: Run linting
      #   run: pnpm run lint

      # Temporarily disabled - TODO: Fix TypeScript errors
      # - name: Run type checking
      #   run: pnpm run check

      - name: Run unit tests
        run: pnpm run test:unit

      - name: Build application
        run: pnpm run build
        env:
          DATABASE_URL: postgresql://dummy:dummy@localhost:5432/dummy

      - name: Verify build output
        run: |
          if [ ! -d "build" ]; then
            echo "Build directory not found!"
            exit 1
          fi
          echo "Build verification successful"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: build/
          retention-days: 1

  # Deploy to Fly.io - Only on main branch pushes
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [smoke-tests, build-verification]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: Health check
        run: |
          # Wait for deployment to stabilize
          sleep 30

          # Run smoke tests against production
          echo "Running production smoke tests..."
          # You can add actual production smoke tests here

      - name: Notify deployment success
        if: success()
        run: |
          echo "üöÄ Deployment successful!"
          echo "App URL: https://trykaiwa.com"

      - name: Notify deployment failure
        if: failure()
        run: |
          echo "‚ùå Deployment failed!"
          echo "Check the logs above for details"

  # Post-deployment smoke tests
  post-deploy-smoke:
    name: Post-Deployment Smoke Tests
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Run production smoke tests
        run: |
          # Set production URL for smoke tests
          export BASE_URL=https://trykaiwa.com
          pnpm run smoke:test
        env:
          CI: true
          BASE_URL: https://trykaiwa.com

      - name: Upload production test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: production-smoke-results
          path: test-results/
          retention-days: 7
